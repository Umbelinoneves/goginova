git init
git remote add origin https://github.com/umbelinoneves/govinova-diagnostico.git
git add .
git commit -m "Deploy inicial"
git push -u origin master
npm run deploy
"homepage": "https://umbelinoneves.github.io/govinova-diagnostico",
"scripts": {
  "dev": "vite",
  "build": "vite build",
  "predeploy": "npm run build",
  "deploy": "gh-pages -d dist"
}
// DiagnosticoEstrategico.jsx
import React, { useState, useEffect } from "react";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { useToast } from "@/components/ui/use-toast";
import { Button } from "@/components/ui/button";
import jsPDF from "jspdf";

import DiagnosticoForm from "./DiagnosticoForm";
import EstrategiaForm from "./EstrategiaForm";
import OKRForm from "./OKRForm";
import MonitoramentoPainel from "./MonitoramentoPainel";

const LOCAL_STORAGE_KEY = "govinova_diagnostico_dados";

export default function DiagnosticoEstrategico() {
  const { toast } = useToast();

  const [dados, setDados] = useState({
    unidade: "",
    responsavel: "",
    missao: "",
    visao: "",
    valores: "",
    forcas: "",
    fraquezas: "",
    oportunidades: "",
    ameacas: "",
    stakeholders: "",
    eixos: "",
    objetivos: "",
    kpis: "",
    iniciativas: "",
    okrObjetivo: "",
    okrKRs: "",
    okrResponsavel: "",
    okrPeriodicidade: "",
    okrStatus: "",
  });

  useEffect(() => {
    const dadosSalvos = localStorage.getItem(LOCAL_STORAGE_KEY);
    if (dadosSalvos) {
      setDados(JSON.parse(dadosSalvos));
    }
  }, []);

  const handleChange = (field) => (e) => {
    const novosDados = { ...dados, [field]: e.target.value };
    setDados(novosDados);
  };

  const handleSalvar = (tipo) => {
    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(dados));
    toast({
      title: `${tipo} salvo com sucesso!`,
      description: "As informações foram salvas no navegador (localStorage).",
    });
  };

  const handleExportarJSON = () => {
    const blob = new Blob([JSON.stringify(dados, null, 2)], { type: "application/json" });
    const url = URL.createObjectURL(blob);
    const a = document.createElement("a");
    a.href = url;
    a.download = "diagnostico_govinova.json";
    a.click();
    URL.revokeObjectURL(url);
  };

  const handleExportarPDF = () => {
    const doc = new jsPDF();
    let y = 10;
    doc.setFontSize(12);
    Object.entries(dados).forEach(([chave, valor]) => {
      const texto = `${chave}: ${valor}`;
      const linhas = doc.splitTextToSize(texto, 180);
      linhas.forEach((linha) => {
        doc.text(linha, 10, y);
        y += 8;
        if (y > 280) {
          doc.addPage();
          y = 10;
        }
      });
    });
    doc.save("diagnostico_govinova.pdf");
  };

  const handleResetar = () => {
    if (window.confirm("Tem certeza que deseja apagar todos os dados?")) {
      localStorage.removeItem(LOCAL_STORAGE_KEY);
      setDados({
        unidade: "",
        responsavel: "",
        missao: "",
        visao: "",
        valores: "",
        forcas: "",
        fraquezas: "",
        oportunidades: "",
        ameacas: "",
        stakeholders: "",
        eixos: "",
        objetivos: "",
        kpis: "",
        iniciativas: "",
        okrObjetivo: "",
        okrKRs: "",
        okrResponsavel: "",
        okrPeriodicidade: "",
        okrStatus: "",
      });
      toast({ title: "Dados apagados", description: "Tudo foi resetado com sucesso." });
    }
  };

  return (
    <div className="p-6 space-y-6">
      <div className="flex flex-col sm:flex-row sm:justify-between sm:items-center gap-4">
        <h1 className="text-3xl font-bold">Sistema de Diagnóstico Estratégico - GOVINOVA</h1>
        <div className="flex gap-2 flex-wrap">
          <Button variant="secondary" onClick={handleExportarJSON}>Exportar JSON</Button>
          <Button variant="secondary" onClick={handleExportarPDF}>Exportar PDF</Button>
          <Button variant="destructive" onClick={handleResetar}>Resetar Dados</Button>
        </div>
      </div>

      <Tabs defaultValue="diagnostico">
        <TabsList className="grid grid-cols-4 w-full">
          <TabsTrigger value="diagnostico">Diagnóstico</TabsTrigger>
          <TabsTrigger value="estrategia">Estratégia</TabsTrigger>
          <TabsTrigger value="okrs">OKRs</TabsTrigger>
          <TabsTrigger value="monitoramento">Monitoramento</TabsTrigger>
        </TabsList>

        <TabsContent value="diagnostico">
          <DiagnosticoForm dados={dados} handleChange={handleChange} handleSalvar={handleSalvar} />
        </TabsContent>

        <TabsContent value="estrategia">
          <EstrategiaForm dados={dados} handleChange={handleChange} handleSalvar={handleSalvar} />
        </TabsContent>

        <TabsContent value="okrs">
          <OKRForm dados={dados} handleChange={handleChange} handleSalvar={handleSalvar} />
        </TabsContent>

        <TabsContent value="monitoramento">
          <MonitoramentoPainel dados={dados} />
        </TabsContent>
      </Tabs>
    </div>
  );
}

